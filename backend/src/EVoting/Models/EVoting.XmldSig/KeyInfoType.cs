//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// This code was generated by XmlSchemaClassGenerator version 2.1.963.0
namespace EVoting.XmldSig
{
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.1.963.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("KeyInfoType", Namespace="http://www.w3.org/2000/09/xmldsig#")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlRootAttribute("KeyInfo", Namespace="http://www.w3.org/2000/09/xmldsig#")]
    public partial class KeyInfoType
    {
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _keyName;
        
        [System.Xml.Serialization.XmlElementAttribute("KeyName", Order=0)]
        public System.Collections.Generic.List<string> KeyName
        {
            get
            {
                return _keyName;
            }
            set
            {
                _keyName = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the KeyName collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool KeyNameSpecified
        {
            get
            {
                return ((this.KeyName != null) 
                            && (this.KeyName.Count != 0));
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="KeyInfoType" /> class.</para>
        /// </summary>
        public KeyInfoType()
        {
            this._keyName = new System.Collections.Generic.List<string>();
            this._keyValue = new System.Collections.Generic.List<KeyValueType>();
            this._retrievalMethod = new System.Collections.Generic.List<RetrievalMethodType>();
            this._x509Data = new System.Collections.Generic.List<X509DataType>();
            this._pgpData = new System.Collections.Generic.List<PgpDataType>();
            this._spkiData = new System.Collections.Generic.List<SpkiDataType>();
            this._mgmtData = new System.Collections.Generic.List<string>();
            this._any = new System.Collections.Generic.List<System.Xml.XmlElement>();
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<KeyValueType> _keyValue;
        
        [System.Xml.Serialization.XmlElementAttribute("KeyValue", Order=1)]
        public System.Collections.Generic.List<KeyValueType> KeyValue
        {
            get
            {
                return _keyValue;
            }
            set
            {
                _keyValue = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the KeyValue collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool KeyValueSpecified
        {
            get
            {
                return ((this.KeyValue != null) 
                            && (this.KeyValue.Count != 0));
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<RetrievalMethodType> _retrievalMethod;
        
        [System.Xml.Serialization.XmlElementAttribute("RetrievalMethod", Order=2)]
        public System.Collections.Generic.List<RetrievalMethodType> RetrievalMethod
        {
            get
            {
                return _retrievalMethod;
            }
            set
            {
                _retrievalMethod = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the RetrievalMethod collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool RetrievalMethodSpecified
        {
            get
            {
                return ((this.RetrievalMethod != null) 
                            && (this.RetrievalMethod.Count != 0));
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<X509DataType> _x509Data;
        
        [System.Xml.Serialization.XmlElementAttribute("X509Data", Order=3)]
        public System.Collections.Generic.List<X509DataType> X509Data
        {
            get
            {
                return _x509Data;
            }
            set
            {
                _x509Data = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the X509Data collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool X509DataSpecified
        {
            get
            {
                return ((this.X509Data != null) 
                            && (this.X509Data.Count != 0));
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<PgpDataType> _pgpData;
        
        [System.Xml.Serialization.XmlElementAttribute("PGPData", Order=4)]
        public System.Collections.Generic.List<PgpDataType> PgpData
        {
            get
            {
                return _pgpData;
            }
            set
            {
                _pgpData = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the PgpData collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool PgpDataSpecified
        {
            get
            {
                return ((this.PgpData != null) 
                            && (this.PgpData.Count != 0));
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<SpkiDataType> _spkiData;
        
        [System.Xml.Serialization.XmlElementAttribute("SPKIData", Order=5)]
        public System.Collections.Generic.List<SpkiDataType> SpkiData
        {
            get
            {
                return _spkiData;
            }
            set
            {
                _spkiData = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the SpkiData collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool SpkiDataSpecified
        {
            get
            {
                return ((this.SpkiData != null) 
                            && (this.SpkiData.Count != 0));
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _mgmtData;
        
        [System.Xml.Serialization.XmlElementAttribute("MgmtData", Order=6)]
        public System.Collections.Generic.List<string> MgmtData
        {
            get
            {
                return _mgmtData;
            }
            set
            {
                _mgmtData = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the MgmtData collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool MgmtDataSpecified
        {
            get
            {
                return ((this.MgmtData != null) 
                            && (this.MgmtData.Count != 0));
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<System.Xml.XmlElement> _any;
        
        [System.Xml.Serialization.XmlAnyElementAttribute(Order=7)]
        public System.Collections.Generic.List<System.Xml.XmlElement> Any
        {
            get
            {
                return _any;
            }
            set
            {
                _any = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Any collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool AnySpecified
        {
            get
            {
                return ((this.Any != null) 
                            && (this.Any.Count != 0));
            }
        }
        
        [System.Xml.Serialization.XmlAttributeAttribute("Id")]
        public string Id { get; set; }
        
        [System.Xml.Serialization.XmlTextAttribute()]
        public string[] Text { get; set; }
    }
}
